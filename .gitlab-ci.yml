#ci/cd pipeline is run on kubernetes a shared pod in started and each stages is run
#define the stages in pipeline here
stages:
  # - build
  # - test
  - deploy
  - cf_file_sync
  - teraform

#vars used in the pipeline
variables:
  PROJECT_ID: "project-beta-000002"

#each stage is defined here and pre defined image is pulled and used - is used to run commands
# build:
#   stage: build
#   image: python:3.9-slim
#   script:
#     - python --version
#     - pip install -q pytest
#     - echo "Build stage complete."

# test:
#   stage: test
#   image: python:3.9-slim
#   script:
#     - apt-get update -y && apt-get install -y git 
#     - python test_line.py
#     - echo "Test stage complete."
#   only:
#   - merge_requests

deploy:
  stage: deploy
  image: google/cloud-sdk:latest
  script:
    - echo $gcp_key > gcp_key.json
    - cat gcp_key.json
    - gcloud auth activate-service-account --key-file=gcp_key.json
    - gsutil -m rsync -r dags/ gs://$gcp_composer1_bucket/dags/
    - echo "connection succesfull"
  only:
    refs:
      - main
      # - merge_requests  # Trigger on merge requests
    changes:
      - dags/*  # Trigger job only if files in the dags/ directory change


teraform:
  stage: teraform
  image: google/cloud-sdk:latest
  script:
    - git fetch --unshallow 
    - echo "$gcp_key" > gcp-key.json
    - chmod 644 gcp-key.json
    - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json
    # Clean previous Terraform setup
    - rm -rf .terraform  # Remove old Terraform modules
    - rm -f .terraform.lock.hcl  # Remove old dependency lock file
    - apt-get update && apt-get install -y curl unzip  # Install required dependencies
    # # - curl -o terraform.zip https://releases.hashicorp.com/terraform/0.12.6/terraform_0.12.6_linux_amd64.zip
    - curl -o terraform.zip https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
    # # - curl -o terraform.zip https://releases.hashicorp.com/terraform/1.11.2/terraform_1.11.2_linux_amd64.zip
    - rm -rf terraform 
    - unzip -o terraform.zip && mv terraform /usr/local/bin/
    - terraform --version
    #teraform init,plan,apply
    - gcloud auth activate-service-account --key-file=gcp-key.json
    - gcloud config set project $PROJECT_ID
    - cp gcp-key.json terraform-files/gcp-key.json
    - ls -lR
    - cd /builds/data-migration4/project-beta-000002/terraform-files
    - ls -l
    - terraform init
    - terraform providers
    - terraform plan -out=tfplan
    - terraform apply -auto-approve tfplan
  only:
    refs:
      - main
      # - merge_requests  # Trigger on merge requests
    changes:
      - terraform-files/* # Trigger job only if files in the dags/ directory change
      - terraform-files/*/*
      - terraform-files/*/*/*




cf_file_sync:
  stage: cf_file_sync
  image: google/cloud-sdk:latest
  script:
    - echo $gcp_key > gcp_key.json
    - cat gcp_key.json
    - gcloud auth activate-service-account --key-file=gcp_key.json
    - gsutil -m rsync -r cloud-function-files/ gs://$gcp_cloudrun_f_bucket/services/
    - echo "connection succesfull"
  only:
    refs:
      - main
      # - merge_requests  # Trigger on merge requests
    changes:
      - cloud-function-files/*
      - cloud-function-files/*/*
      - cloud-function-files/*/*/* # Trigger job only if files in the dags/ directory change